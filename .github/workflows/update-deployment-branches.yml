---
name: Update the deployment branches containing the build recipes

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  create-pull-requests:
    name: create pull requests if the build recipes changed
    runs-on: ubuntu-22.04
    container: ghcr.io/dcermak/bci-ci:latest

    strategy:
      fail-fast: false
      matrix:
        os_version:
          - 5
          - 4
          - Tumbleweed

    steps:
      # we need all branches for the build checks
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CHECKOUT_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: fix the file permissions of the repository
        run: chown -R $(id -un):$(id -gn) .

      - name: install python dependencies
        run: poetry install

      - name: setup the continuous rebuild project
        run: poetry run ./scratch-build-bot.py --os-version ${{ matrix.os_version }} create_cr_project
        env:
          OSC_PASSWORD: ${{ secrets.OSC_PASSWORD }}
          OSC_USER: "defolos"

      - name: configure git user
        run: |
          git config user.name "SUSE Update Bot"
          git config user.email "noreply@suse.com"

      - name: commit the changes to a test branch
        run: |
          set -euo pipefail
          poetry run ./scratch-build-bot.py \
              --os-version ${{ matrix.os_version }} \
              -vvvv \
              --branch-name "for-deploy-${{ matrix.os_version }}" \
              commit_state \
              --commit-message "ðŸ¤–: Update build recipes from templates" \
            | tee commit_state_out
          if [[ "$(wc -l commit_state_out | awk '{print $1}')" = "1" ]]; then
              echo "DEPLOYMENT_COMMIT_HASH=$(cat commit_state_out)" >> $GITHUB_ENV
          else
              echo "no_change=true" >> $GITHUB_ENV
          fi
          cat test-build.env >> $GITHUB_ENV
        env:
          OSC_USER: "defolos"

      - name: create a pull request
        uses: vsoch/pull-request-action@master
        id: create-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_FROM_BRANCH: ${{ env.BRANCH_NAME }}
          PULL_REQUEST_BRANCH: ${{ env.DEPLOYMENT_BRANCH_NAME }}
          PULL_REQUEST_TITLE: "ðŸ¤–: Update build recipes for ${{ env.OS_VERSION_PRETTY }}"
          PULL_REQUEST_UPDATE: 1
          PULL_REQUEST_REVIEWERS: "fcrozat ZerwasMOD dirkmueller"
        if: env.no_change != 'true'

        # see https://github.com/vsoch/pull-request-action/issues/30 for context
      - name: Close and reopen the PR to trigger github actions
        uses: dogmatic69/actions/automations/pr-toggle@master
        env:
          PULL_REQUEST_NUMBER: |
            ${{ steps.create-pr.outputs.pull_request_number }}
          GITHUB_TOKEN: '${{ secrets.PAT }}'
